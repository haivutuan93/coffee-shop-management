swagger: '2.0'
info:
  title: Shop Service API
  version: '1.0'

tags:
  - name: Shop Management
    description: APIs for managing the shop and products
  - name: Order Management
    description: APIs for managing the order
  - name: Location Management

paths:
  /shops:
    post:
      tags:
        - Shop Management
      summary: Create a new shop
      responses:
        '201':
          description: Shop created successfully
          schema:
            $ref: '#/definitions/ShopRequest'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'


  /shops/{shopId}:
    put:
      tags:
        - Shop Management
      summary: Update shop details
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ShopRequest'
      responses:
        '200':
          description: Shop details updated successfully
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/{shopId}/product/update:
    put:
      tags:
        - Shop Management
      summary: Update the coffee menu and pricing
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductUpdateRequest'
      responses:
        '200':
          description: Product updated
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/{shopId}/product:
    get:
      tags:
        - Shop Management
      summary: Get the menu products of a shop
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Menu retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ShopProduct'
        '404':
          description: Shop not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /shops/{shopId}/queues/config:
    put:
      tags:
        - Shop Management
      summary: Configure the number of queues and the maximum size of each queue for a shop
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueueConfigRequest'
      responses:
        '200':
          description: Queue configuration updated successfully
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/{shopId}/customers/{customerId}/orders:
    post:
      tags:
        - Order Management
      summary: Place an order
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: customerId
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrderRequest'
      responses:
        '201':
          description: Order placed successfully
          schema:
            $ref: '#/definitions/CustomerOrderDetails'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /shops/{shopId}/queues:
    get:
      tags:
        - Order Management
      summary: Get the details of all queues along with the orders in each queue for a shop
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Queue and order details retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/QueueWithOrdersInfo'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/orders/{orderId}:
    get:
      tags:
        - Order Management
      summary: Get the details of a specific order, including position in the queue and expected waiting time
      parameters:
        - name: orderId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Order details retrieved successfully
          schema:
            $ref: '#/definitions/CustomerOrderDetails'
        '400':
          description: Bad Request
        '404':
          description: Order not found
        '500':
          description: Internal Server Error

  /shops/{shopId}/orders/{orderId}/serve:
    post:
      tags:
        - Order Management
      summary: Remove an order from a queue and service them
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: orderId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Serve order immediately from the queue
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/{shopId}/orders/{orderId}/exit:
    put:
      tags:
        - Order Management
      summary: Customer exits an order from a queue and cancels the order
      parameters:
        - name: shopId
          in: path
          required: true
          type: integer
        - name: orderId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Customer exited the queue and order cancelled
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /shops/closest:
    get:
      tags:
        - Location Management
      summary: Find the coffee shops closest to the customer's location
      parameters:
        - name: latitude
          in: query
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          required: true
          type: number
          format: double
      responses:
        '200':
          description: List of closest coffee shops retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ClosestShop'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

definitions:
  ShopRequest:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      contact_details:
        type: string
      queue_quantity:
        type: integer
      queue_size:
        type: integer
      opening_time:
        type: string
      closing_time:
        type: string

  ShopProduct:
    type: object
    properties:
      shop_product_id:
        type: integer
      price:
        type: number
      quantity_remaining:
        type: integer

  ProductUpdateRequest:
    type: object
    required:
      - product_id
      - price
    properties:
      product_id:
        type: integer
      price:
        type: number

  OrderResponse:
    type: object
    required:
      - customer_id
      - shop_id
      - total_price
      - order_status
    properties:
      order_id:
        type: integer
      customer_id:
        type: integer
      shop_id:
        type: integer
      queue_id:
        type: integer
      total_price:
        type: number
      position_in_queue:
        type: integer
      expected_wait_time:
        type: string
      order_status:
        type: string

  OrderRequest:
    type: object
    required:
      - order_details
    properties:
      order_details:
        type: array
        items:
          $ref: '#/definitions/OrderDetailRequest'

  OrderDetailRequest:
    type: object
    required:
      - shop_product_id
      - quantity
    properties:
      shop_product_id:
        type: integer
      quantity:
        type: integer

  QueueInfo:
    type: object
    properties:
      queue_size:
        type: integer
      waiting_customers:
        type: integer

  CustomerInfo:
    type: object
    properties:
      customer_id:
        type: integer
      customer_name:
        type: string

  OrderInfo:
    type: object
    properties:
      order_id:
        type: integer
      total_price:
        type: number
      position_in_queue:
        type: integer
      expected_wait_time:
        type: string
      order_status:
        type: string
      customer:
        $ref: '#/definitions/CustomerInfo'

  QueueWithOrdersInfo:
    type: object
    properties:
      queue_id:
        type: integer
      queue_size:
        type: integer
      waiting_customers:
        type: integer
      orders:
        type: array
        items:
          $ref: '#/definitions/OrderInfo'

  OrderDetail:
    type: object
    properties:
      shop_product_id:
        type: integer
      product_name:
        type: string
      quantity:
        type: integer
      price:
        type: number

  CustomerOrderDetails:
    type: object
    properties:
      order_id:
        type: integer
      total_price:
        type: number
      position_in_queue:
        type: integer
      expected_wait_time:
        type: string
      order_status:
        type: string
      customer:
        $ref: '#/definitions/CustomerInfo'
      details:
        type: array
        items:
          $ref: '#/definitions/OrderDetail'

  QueueConfigRequest:
    type: object
    properties:
      quantity:
        type: integer
      queue_size:
        type: integer

  ClosestShop:
    type: object
    properties:
      shop_id:
        type: integer
      name:
        type: string
      address:
        type: string
      distance:
        type: number
      latitude:
        type: number
      longitude:
        type: number

  ErrorModel:
    type: object
    properties:
      error_code:
        type: integer
      error_message:
        type: string